#!/bin/bash

# <local_command> <args>
# command_line    $USER1$/eventhandlers/event_local_cmd -H $ARG1$ -C $ARG2$ -S $ARG3$ -T $ARG4$ -N $ARG5$ -D $ARG6$ -d $ARG7$ -- $ARG8$
# event_local_cmd!$HOSTADDRESS$!<local_command>!CRITICAL!SOFT!1,3,4!$SERVICESTATE$$STATETYPE$$SERVICEATTEMPT$!$SERVICEDOWNTIME$!<args>

LIBEXECPATH=/data/icinga/libexec
EVENTHLOG=/data/icinga/var/eventhandler.log
TIMEOUT=15
EVENTDATE="$(date)"
MAILADR="unix@everyware.ch"

while getopts H:c:C:S:T:N:D:d: flag; do
  case $flag in
    H)
      HOSTADDRESS="$OPTARG";
      ;;
    C)
      LCMD="$OPTARG";
      ;;
    S)
      SSTATE="$OPTARG";
      ;;
    T)
      STYPE="$OPTARG";
      ;;
    N)
      STRY="$OPTARG";
      ;;
    D)
      EVENT="$OPTARG";
      ;;
    d)
      DOWNTIME=$OPTARG;
      ;;
    ?)
      echo "Missing flags.";
      exit 1;
      ;;
  esac
done

shift $(( OPTIND - 1 ));

IMSG="$EVENTDATE - $HOSTADDRESS - $EVENT - command: $LCMD "

if [ $DOWNTIME -gt 0 ]; then
	echo "$IMSG is in a scheduled downtime... exit 0" >> $EVENTHLOG
	exit 0
fi

IFS=','
TRYARR=$STRY

for x in $TRYARR
do
    if [ "$SSTATE$STYPE$x" = "$EVENT" ]; then
	echo "$IMSG running command with arguments - $@". >> $EVENTHLOG
    	$LIBEXECPATH/$LCMD $@
	RT=$?
	echo "$IMSG return code was $RT" >> $EVENTHLOG
	mailx -s "[ICINGA] $IMSG - $RT" $MAILADR <<EOF
Icinga Eventhandler
$IMSG - with arguments - $@
$IMSG return code was $RT
EOF
	exit $RT
    fi
done
exit 0
#EOF
